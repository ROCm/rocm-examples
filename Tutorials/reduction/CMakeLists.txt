# MIT License
#
# Copyright (c) 2024 Advanced Micro Devices, Inc. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

if("${GPU_RUNTIME}" STREQUAL "CUDA")
    if(${CMAKE_VERSION} VERSION_LESS "3.25.2")
        message(
            STATUS
            "Skipped: Reduction tutorial, because CMake version is too low."
        )
        return()
    endif()
    cmake_minimum_required(VERSION 3.25.2)
else()
    cmake_minimum_required(VERSION 3.21)
endif()

project(Reduction LANGUAGES CXX)

file(RELATIVE_PATH folder_bin ${CMAKE_SOURCE_DIR} ${CMAKE_CURRENT_SOURCE_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin/${folder_bin})

option(REDUCTION_BUILD_TESTING "Build Reduction tests" ON)
option(REDUCTION_BUILD_BENCHMARKS "Build Reduction benchmarks" ON)
option(REDUCTION_BUILD_EXAMPLES "Build Reduction examples" ON)

add_library(Reduction IMPORTED INTERFACE)

target_include_directories(Reduction INTERFACE include)

if(REDUCTION_BUILD_TESTING)
    enable_testing()
    enable_language(CXX) # GTest::GTest depends on Threads::Threads
    add_subdirectory(test)
endif()

if(REDUCTION_BUILD_BENCHMARKS)
    enable_language(CXX) # benchmark::benchmark depends on Threads::Threads
    add_subdirectory(benchmark)
endif()

if(REDUCTION_BUILD_EXAMPLES)
    enable_language(CXX) # TBB::tbb depends on Threads::Threads
    add_subdirectory(example)
endif()
